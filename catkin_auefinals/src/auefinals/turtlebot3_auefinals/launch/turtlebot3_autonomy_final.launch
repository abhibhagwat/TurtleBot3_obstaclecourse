<launch>

  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="multi_robot_name" default=""/>
  <arg name="x_pos" default="-0.2"/>
  <arg name="y_pos" default="1.6"/>
  <arg name="z_pos" default="0"/>  
  <arg name="yaw_pos" default="3.14"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_auefinals)/worlds/turtlebot3_final.world" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  

   <include file="$(find person_sim)/launch/init_small_standing_person.launch">
   </include> 

   <include file="$(find turtle_tf_3d)/launch/person_standing_keyboard_move.launch">
   </include>

  <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value="$(arg multi_robot_name)"/>
  </node>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw_pos) -param robot_description" />

  <!-- YOLO -->
  <include file="$(find darknet_ros)/launch/darknet_ros.launch"></include> 

  <!-- NAVIGATION (INCLUDES RVIZ) -->
  <include file="$(find turtlebot3_navigation)/launch/turtlebot3_navigation.launch"> </include> 

  <!-- LEG DETECTOR -->
  <include file="$(find leg_detector)/launch/pi_leg_detector.launch"> </include>

  <!-- MAIN NODE -->
   <node name="autonomous_controller" pkg="turtlebot3_auefinals" type="main.py" output="screen" launch-prefix="xterm -e"/> 

  <!-- IMAGE PROCESSING -->
  <env name="ROS_NAMESPACE" value="camera/rgb"/>
  <node pkg="image_proc" type="image_proc" name="rectification_node" args="-image_raw image_raw -_approximate_s true -_queue_size 20 "/> 

</launch>




